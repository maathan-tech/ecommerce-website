<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HarvestBazar Dashboard</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        .logo-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 250px;
            padding: 15px;
            background: white;
            z-index: 1030;
            border-bottom: 1px solid #eee;
        }

        .sidebar {
            position: fixed;
            top: 60px;
            left: -250px;
            width: 250px;
            height: calc(100vh - 60px);
            background: #fff;
            transition: 0.3s;
            z-index: 1020;
            overflow-y: auto;
            border-right: 1px solid #eee;
        }

        .sidebar.active {
            left: 0;
        }

        .nav-link {
            color: #666;
            padding: 10px 20px;
        }

        .nav-link:hover {
            background-color: #f8f9fa;
        }

        .nav-link.active {
            background-color: #e8f5e9;
            color: #2e7d32;
        }

        .main-content {
            margin-left: 0;
            transition: 0.3s;
            padding-top: 60px;
        }

        .main-content.active {
            margin-left: 250px;
        }

        .toggle-btn {
            position: fixed;
            top: 15px;
            left: 260px;
            z-index: 1040;
            transition: 0.3s;
            display: none;
        }

        .toggle-btn.active {
            left: 260px;
        }

        .mobile-toggle {
            position: fixed;
            top: 15px;
            left: 15px;
            z-index: 1;
            display: none;
        }
        @media (min-width: 992px) {
            .sidebar {
                left: 0;
            }
            .main-content {
                margin-left: 250px;
            }
            .toggle-btn {
                display: none;
            }
            .mobile-toggle {
                display: none;
            }
        }

        @media (max-width: 991px) {
            .logo-container {
                left: -250px;
            }
            .logo-container.active {
                left: 0;
            }
            .mobile-toggle {
                display: block;
            }
            .main-content {
                margin-left: 0 !important;
            }
        }

        .card {
    border: none;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease-in-out;
}

.card:hover {
    transform: translateY(-5px);
}

.card-title {
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
}

.card-text {
    font-size: 1.8rem;
    font-weight: 700;
    margin: 0;
}

/* Stats Cards Specific Styles */
.bg-primary {
    background: linear-gradient(45deg, #4e73df, #224abe) !important;
}

.bg-success {
    background: linear-gradient(45deg, #1cc88a, #13855c) !important;
}

.bg-warning {
    background: linear-gradient(45deg, #f6c23e, #dda20a) !important;
}

/* Table Styles */
.table-responsive {
    border-radius: 10px;
    overflow: hidden;
}

.table {
    margin-bottom: 0;
}

.table thead th {
    background-color: #f8f9fc;
    border-bottom: 2px solid #e3e6f0;
    font-weight: 600;
    text-transform: uppercase;
    font-size: 0.85rem;
    letter-spacing: 0.5px;
    color: #4e73df;
    padding: 1rem;
}

.table tbody td {
    padding: 1rem;
    vertical-align: middle;
}

.table tbody tr:hover {
    background-color: #f8f9fc;
}

/* Badge Styles */
.badge {
    padding: 0.5em 0.8em;
    font-weight: 500;
    letter-spacing: 0.3px;
}

/* Button Styles */
.btn {
    padding: 0.5rem 1rem;
    font-weight: 500;
    letter-spacing: 0.3px;
    border-radius: 5px;
    transition: all 0.2s;
}

.btn-primary {
    background-color: #4e73df;
    border-color: #4e73df;
}

.btn-primary:hover {
    background-color: #224abe;
    border-color: #224abe;
    transform: translateY(-1px);
}

.btn-danger {
    background-color: #e74a3b;
    border-color: #e74a3b;
}

.btn-danger:hover {
    background-color: #be2617;
    border-color: #be2617;
    transform: translateY(-1px);
}

.btn-sm {
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
}

/* Modal Styles */
.modal-content {
    border: none;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.modal-header {
    background-color: #f8f9fc;
    border-bottom: 1px solid #e3e6f0;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    padding: 1.25rem;
}

.modal-title {
    font-weight: 600;
    color: #4e73df;
}

.modal-body {
    padding: 1.5rem;
}

.modal-footer {
    background-color: #f8f9fc;
    border-top: 1px solid #e3e6f0;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    padding: 1.25rem;
}

/* Form Styles */
.form-label {
    font-weight: 500;
    color: #5a5c69;
    margin-bottom: 0.5rem;
}

.form-control, .form-select {
    border: 1px solid #d1d3e2;
    border-radius: 5px;
    padding: 0.75rem;
    font-size: 0.9rem;
    transition: border-color 0.2s;
}

.form-control:focus, .form-select:focus {
    border-color: #4e73df;
    box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
}

.form-control::placeholder {
    color: #858796;
}

/* Main Content Container Styles */
.container-fluid {
    padding: 1.5rem;
}

/* Card Header with Button */
.card-header {
    background-color: #f8f9fc;
    border-bottom: 1px solid #e3e6f0;
    padding: 1.25rem;
}

/* Status Badge Specific Styles */
.badge.bg-success {
    background-color: #1cc88a !important;
}

.badge.bg-danger {
    background-color: #e74a3b !important;
}

.badge.bg-info {
    background-color: #36b9cc !important;
}

/* Multiple Select Styles */
select[multiple] {
    height: 150px;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    .card-header {
        flex-direction: column;
        gap: 1rem;
    }
    
    .btn {
        width: 100%;
    }
    
    .table thead th {
        font-size: 0.8rem;
        padding: 0.75rem;
    }
    
    .table tbody td {
        padding: 0.75rem;
    }
    
    .modal-dialog {
        margin: 0.5rem;
    }
}

/* Animation for Success/Error Messages */
@keyframes slideInDown {
    from {
        transform: translateY(-100%);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

.alert {
    animation: slideInDown 0.3s ease-out;
}

/* Hover Effects */
.nav-link:hover {
    background-color: #f8f9fc;
    color: #4e73df;
    transform: translateX(5px);
    transition: all 0.2s;
}

/* Custom Scrollbar */
::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}

::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background: #555;
}

/* Loading Spinner */
.spinner-border {
    width: 1.5rem;
    height: 1.5rem;
    border-width: 0.2em;
}

/* Tooltip Styles */
.tooltip {
    font-size: 0.8rem;
}

.tooltip-inner {
    background-color: #4e73df;
    border-radius: 4px;
    padding: 0.5rem 1rem;
}

/* Focus Styles for Accessibility */
:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(78, 115, 223, 0.25);
}

/* Print Styles */
@media print {
    .btn,
    .modal,
    .no-print {
        display: none !important;
    }
    
    .card {
        box-shadow: none;
        border: 1px solid #ddd;
    }
    
    .table {
        width: 100% !important;
    }
    
    .table td,
    .table th {
        background-color: white !important;
        color: black !important;
    }
}

  

        
    </style>
</head>
<body>
    <div class="logo-container">
        <a class="navbar-brand " href="#"><img src="/images/HarvestBazar1.png" alt="HarvestBazar" height="50" > </a>
    </div>

    <!-- Mobile Toggle Button -->
    <button class="btn btn-light mobile-toggle" id="mobileToggle">
        <i class="fas fa-bars"></i>
    </button>

    <!-- Desktop Toggle Button -->
    <button class="btn btn-light toggle-btn" id="sidebarToggle">
        <i class="fas fa-bars"></i>
    </button>

    <!-- Sidebar -->
    <div class="sidebar mt-3" id="sidebar">
        <nav class="nav flex-column">
            <a class="nav-link" href="/admin/Dashboard"><i class="fas fa-tachometer-alt me-2"></i> Dashboard</a>
            <a class="nav-link" href="/admin/orders"><i class="fas fa-shopping-cart me-2"></i> Orders</a>
            <a class="nav-link" href="/admin/productcategories"><i class="fas fa-list me-2"></i> Product Categories</a>
            <a class="nav-link" href="/admin/products"><i class='fas fa-bookmark me-2'></i> Products</a>
            <a class="nav-link" href="/admin/usermanagement"><i class="fas fa-users me-2"></i> User Management</a>
            <!-- <a class="nav-link" href="#"><i class="fas fa-chart-bar me-2"></i> Sales Report</a> -->
            <a class="nav-link" href="/admin/coupons"><i class="fas fa-ticket-alt me-2"></i> Coupons</a>
            <a class="nav-link active" href=""><i class="fa-solid fa-gift me-2"></i> Offers</a>
            <a class="nav-link" href="/admin/logout"><i class="fas fa-sign-out-alt me-2"></i> Log-out</a>
        </nav>
    </div>

    <!-- Main Content -->
    <div class="main-content" id="main">

        <div class="container-fluid">
            <div class="row mb-4">
                <div class="col">
                    <h2 class="mb-4">Offer Management</h2>
                    
                    <!-- Offer List Section -->
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">All Offers</h5>
                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addOfferModal">
                                <i class="fas fa-plus"></i> Add New Offer
                            </button>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Offer Name</th>
                                            <th>Type</th>
                                            <th>Discount</th>
                                            <th>Start Date</th>
                                            <th>End Date</th>
                                           <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% offers.forEach(offer => { %>
                                        <tr>
                                            <td><%= offer.title %></td>
                                            <td>
                                                <span class="badge <%= offer.type === 'Product' ? 'bg-info' : 'bg-success' %>">
                                                    <%= offer.type %>
                                                </span>
                                            </td>
                                            <td><%= offer.discount %>%</td>
                                            <td><%= new Date(offer.startDate).toLocaleDateString() %></td>
                                            <td><%= new Date(offer.endDate).toLocaleDateString() %></td>
                                            <% if(offer.isActive){ %>
                                                <td class="text-success">Active</td>
                                            <% } else {%>
                                                <td class="text-danger">Non Active</td>
                                            <% } %>
                                            <td>
                                                <button class="btn btn-sm btn-primary me-1" 
                                                        type="button"
                                                        data-bs-toggle="modal" 
                                                        data-bs-target="#editOfferModal"
                                                        data-id="<%= offer._id %>" data-title="<%= offer.title %>" data-type="<%= offer.type %>" data-discount="<%= offer.discount %>" data-startDate="<%= offer.startDate %>" data-endDate="<%= offer.endDate %>"
                                                        onclick="populateEditForm(this)" >
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button class="btn btn-sm btn-danger"
                                                        onclick="deleteOffer('<%= offer._id %>')"
                                                        data-bs-toggle="modal" 
                                                        data-bs-target="#deleteOfferModal">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                        <% }) %>
                                    </tbody>
                                </table>
                            </div>
                            <div class="pagination mt-4">
                                <nav>
                                    <ul class="pagination justify-content-center">
                                        <% if (currentPage > 1) { %>
                                            <li class="page-item">
                                                <a class="page-link" href="?page=<%= currentPage - 1 %>&limit=10">Previous</a>
                                            </li>
                                        <% } %>
                                        <% for (let i = 1; i <= totalPages; i++) { %>
                                            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                                <a class="page-link" href="?page=<%= i %>&limit=10"><%= i %></a>
                                            </li>
                                        <% } %>
                                        <% if (currentPage < totalPages) { %>
                                            <li class="page-item">
                                                <a class="page-link" href="?page=<%= currentPage + 1 %>&limit=10">Next</a>
                                            </li>
                                        <% } %>
                                    </ul>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
       
        <!-- Add Offer Modal -->
        <div class="modal fade" id="addOfferModal" tabindex="-1" aria-labelledby="addOfferModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form action="/admin/offers/add" method="POST" id="addOfferForm" onsubmit="return validateForm()">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addOfferModalLabel">Add New Offer</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="mb-3">
                                <label for="offerName" class="form-label">Offer Name</label>
                                <input type="text" class="form-control" id="offerName" name="title" required>
                            </div>
                            <div class="mb-3">
                                <label for="offerType" class="form-label">Offer Type</label>
                                <select class="form-select" id="offerType" name="type" required>
                                    <option value="product">Product</option>
                                    <option value="category">Category</option>
                                    <option value="referral">Referral</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="discount" class="form-label">Discount (%)</label>
                                <input type="number" class="form-control" id="discount" name="discount" required>
                            </div>
                            <div class="mb-3">
                                <label for="startDate" class="form-label">Start Date</label>
                                <input type="date" class="form-control" id="startDate" name="startDate" required>
                            </div>
                            <div class="mb-3">
                                <label for="endDate" class="form-label">End Date</label>
                                <input type="date" class="form-control" id="endDate" name="endDate" required>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Add Offer</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        
        <!-- Edit Offer Modal -->
        <div class="modal fade" id="editOfferModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Offer</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editOfferForm" onsubmit="return editValidateForm()">
                            <input type="hidden" id="editOfferId" name="offerId">
                            
                            <div class="modal-body">
                                <div class="mb-3">
                                    <label for="offerName" class="form-label">Offer Name</label>
                                    <input type="text" class="form-control" id="editOfferName" name="title" required>
                                </div>
                                <div class="mb-3">
                                    <label for="offerType" class="form-label">Offer Type</label>
                                    <select class="form-select" id="editOfferType" name="type" required>
                                        <option value="product">Product</option>
                                        <option value="category">Category</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="discount" class="form-label">Discount (%)</label>
                                    <input type="number" class="form-control" id="editDiscount" name="discount" required>
                                </div>
                                <div class="mb-3">
                                    <label for="startDate" class="form-label">Start Date</label>
                                    <input type="date" class="form-control" id="editStartDate" name="startDate" required>
                                </div>
                                <div class="mb-3">
                                    <label for="endDate" class="form-label">End Date</label>
                                    <input type="date" class="form-control" id="editEndDate" name="endDate" required>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary" >Update Offer</button>
                            </div>
                        </form>
                    </div>
                    
                </div>
            </div>
        </div>
        
        <!-- Delete Offer Modal -->
        <div class="modal fade" id="deleteOfferModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteOfferModalLabel">Delete Offer</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this offer? This action cannot be undone.</p>
                        <input type="hidden" id="deleteOfferId" name="offerId">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-danger" id="deleteOffer">Delete</button>
                    </div>
                </div>
            </div>
        </div>

     

    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>


    <script>

           // Sidebar Toggle Functionality
           const sidebar = document.getElementById('sidebar');
        const main = document.getElementById('main');
        const logo = document.querySelector('.logo-container');
        const toggleBtn = document.getElementById('sidebarToggle');
        const mobileToggle = document.getElementById('mobileToggle');

        function toggleSidebar() {
            sidebar.classList.toggle('active');
            main.classList.toggle('active');
            logo.classList.toggle('active');
            toggleBtn.classList.toggle('active');
        }

        toggleBtn.addEventListener('click', toggleSidebar);
        mobileToggle.addEventListener('click', toggleSidebar);


        document.addEventListener("DOMContentLoaded",()=>{
            fetch('/admin/offers')
                .then(response =>{
                    if(!response.ok){
                        return response.json().then(data =>{
                            Swal.fire({
                                icon:'error',
                                title:'Oops...',
                                text: data.message || 'An unexpected error occured',
                                confirmButtonText:'OK'
                            })
                        })
                    }
                }).catch(err =>{
                    console.error(err)
                    Swal.fire({
                        icon:'error',
                        title:'Internal sever error',
                        text:'something went wrong',
                        confirmButtonText:'OK'
                    })
                })
        })

        //add offer validation
        function validateForm(){
            const offerName = document.getElementById('offerName').value.trim()
            const offerType = document.getElementById('offerType').value
            const discount = document.getElementById('discount').value
            const startDate = new Date(document.getElementById('startDate').value)
            const endDate = new Date(document.getElementById('endDate').value)
            const currentDate = new Date()

            if(!offerName || offerName.length < 2){
                Swal.fire({
                    icon:'warning',
                    title:'validation error',
                    text: 'Offer name must be atleast 2 characters'
                })
                return false
            }

            if(!offerType){
                Swal.fire({
                    icon:'warning',
                    title:'validation error',
                    text: 'Offer type required'
                })
                return false
            }
            
            if(!discount || discount > 60 || discount < 0 ){
                Swal.fire({
                    icon:'warning',
                    title:'validation error',
                    text:'Discount must be between 0 and 80'
                })
                return false
            }

            if(!startDate){
                Swal.fire({
                    icon:'warning',
                    title:'validation error',
                    text: 'Start date should be present '
                })
                return false
            }

            if(endDate <= startDate){
                Swal.fire({
                    icon:'warning',
                    title:'validation error',
                    text:'End date should be greater than start date'
                })
                return false
            }
            return true
        }
        


        //edit offer validation
        function editValidateForm(){
            const title = document.getElementById('editOfferName').value.trim();
            const type = document.getElementById('editOfferType').value;
            const discount = document.getElementById('editDiscount').value;
            const startDate = new Date(document.getElementById('editStartDate').value);
            const endDate = new Date(document.getElementById('editEndDate').value);
            const currentDate = new Date();

            if(!title || title.length < 2){
                Swal.fire({
                    icon:'warning',
                    title:'validation error',
                    text:'Offer name should be at least 2 character'
                })
                return false
            }
            
            if(!type){
                Swal.fire({
                    icon:'warning',
                    title:'validation error',
                    text:'Offer type required'
                })
                return false
            }

            if(!discount || discount > 60 || discount < 0){
                Swal.fire({
                    icon:'warning',
                    title:'validation error',
                    text:'Discount must be between 0 and 80'
                })
                return false
            }

            if(!startDate){
                Swal.fire({
                    icon:'warning',
                    title:'validation error',
                    text:'Offer start date must be a future date'
                })
                return false
            }

            if(endDate <= startDate){
                Swal.fire({
                    icon:'warning',
                    title:'validation error',
                    text:'End date must be greater then start date'
                })
                return false
            }
            return true
            
        }

        //add offer
        document.getElementById('addOfferForm').addEventListener('submit',async(e)=>{
            e.preventDefault()

            const form = e.target;
            const formData = new FormData(form)
            const data = Object.fromEntries(formData.entries())

            if(!validateForm()){
                return
            }

            try {
                const response  = await fetch(form.action,{
                    method: 'POST',
                    headers: {
                        'Content-Type' : 'application/json'
                    },
                    body: JSON.stringify(data)
                })

                const result  = await response.json()

                if(result.success){
                    Swal.fire({
                        icon: 'success',
                        title: 'success',
                        text: result.message
                    }).then(()=>{
                        location.reload()
                    })
                    form.reset()
                    const modalElement = document.getElementById('addOfferModal');
                    const modalInstance = bootstrap.Modal.getInstance(modalElement) || new bootstrap.Modal(modalElement);
                    modalInstance.hide();
                }else {
                    Swal.fire({
                        icon:'error',
                        title: 'error',
                        text: result.message
                    })
                }
            } catch (error) {
                Swal.fire({
                    icon:'error',
                    title:'error',
                    text: 'unexpected error occured'
                })
                console.log(error);
                
                
            }

        })

        //edit offer
        function populateEditForm(button){
            const offerId = button.getAttribute('data-id')
            const title = button.getAttribute('data-title')
            const type = button.getAttribute('data-type')
            const discount = button.getAttribute('data-discount')
            const startDate = button.getAttribute('data-startDate')
            const endDate = button.getAttribute('data-endDate')

            document.getElementById('editOfferId').value = offerId
            document.getElementById('editOfferName').value = title
            document.getElementById('editOfferType').value = type
            document.getElementById('editDiscount').value = discount
            document.getElementById('editStartDate').value = new Date(startDate).toISOString().split('T')[0];
            document.getElementById('editEndDate').value =new Date(endDate).toISOString().split('T')[0];
        }

        document.getElementById('editOfferForm').addEventListener('submit',async (e) =>{
            e.preventDefault()
           

            const offerId = document.getElementById('editOfferId').value;
            const title = document.getElementById('editOfferName').value
            const type = document.getElementById('editOfferType').value
            const discount = document.getElementById('editDiscount').value
            const startDate = document.getElementById('editStartDate').value
            const endDate = document.getElementById('editEndDate').value

            const data= { offerId, title, type, discount, startDate, endDate }
       
            if(!editValidateForm(data)){
                return
            }

        try {
            const response = await fetch('/admin/offers/edit',{
                method: 'POST',
                headers:{
                    'Content-Type' : 'application/json'
                },
                body: JSON.stringify(data)
            })
            const result = await response.json()

            if(result.success){
                Swal.fire({
                    icon:'success',
                    title:'success',
                    text: result.message
                }).then(()=>{
                    location.reload()
                })
            }else {
                Swal.fire({
                    icon:'error',
                    title:'error',
                    text:result.message
                })
            }
        } catch (error) {
            console.log(error)
            Swal.fire({
                icon:'error',
                title:'error',
                text:'Something went wrong'
            })
        }
    })


    //delete offer
    function deleteOffer(offerId){
        document.getElementById('deleteOfferId').value = offerId
    }

    document.getElementById('deleteOffer').addEventListener('click',function(){
        const offerId = document.getElementById('deleteOfferId').value

        fetch(`/admin/offers/delete/${offerId}`,{
            method: 'DELETE',
            
        }).then(response => response.json())
        .then(data => {
            if(data.success){
                Swal.fire({
                    icon:'success',
                    title:'success',
                    text: data.message
                }).then(()=>{
                    location.reload()
                })
            }else {
                Swal.fire({
                    icon:'error',
                    title:'error',
                    text: data.message
                })
            }
        })
    })


   

        </script>
</body>
</html>