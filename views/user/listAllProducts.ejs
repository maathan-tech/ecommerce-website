<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>All Products</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
       
        .product-card {
            border: 1px solid #eee;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
            transition: transform 0.3s;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .product-image {
            height: 200px;
            object-fit: cover;
            width: 100%;
            border-radius: 6px;
        }

        .sale-badge {
            position: absolute;
            top: 10px;
            left: 10px;
            background-color: #dc3545;
            color: white;
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 14px;
        }

        .wishlist-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: white;
            border: none;
            border-radius: 50%;
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .stock-badge {
            font-size: 12px;
            padding: 4px 8px;
            border-radius: 4px;
            display: inline-block;
            margin-bottom: 8px;
        }

        .in-stock {
            background-color: #198754;
            color: white;
        }

        .out-of-stock {
            background-color: #dc3545;
            color: white;
        }

        .star-rating {
            color: #ffc107;
            font-size: 14px;
        }

        .cart-btn {
            border: 1px solid #0d6efd;
            background: transparent;
            color: #0d6efd;
            padding: 5px 10px;
            border-radius: 4px;
            transition: all 0.3s;
        }

        .cart-btn:hover {
            background: #0d6efd;
            color: white;
        }

        .price {
            font-size: 1.2rem;
            font-weight: bold;
            color: #333;
        }
        .original-price {
            font-size: 0.875rem;
            color: #6c757d;
            text-decoration: line-through;
        }
    </style>
</head>
<body>
    <div class="top-bar">
        <div class="container">
            <div class="row align-items-center pt-2">
                <div class="col-md-6">
                    <a href="/"><img src="/images/HarvestBazar1.png" alt="HarvestBazar" height="50"></a>
                </div>
                <div class="col-md-6 text-end">
                    <span class="me-3">
                        <!-- <i class="fas fa-phone"></i>
                        (219) 555-0114 -->
                   
                        <a href="/wishlist" class="text-black me-3 position-relative">
                            <i class="far fa-heart" style="font-size: 1.0rem;"></i>
                            <span id="wishlist-badge" class="badge bg-danger rounded-circle position-absolute top-0 start-100 translate-middle">
                                0
                            </span>
                        </a>                    
                        <a href="/shoppingCart" class="text-black me-3 position-relative">
                        <i class="fas fa-shopping-cart" style="font-size: 1.0rem;"></i>
                        <span id="cart-badge" class="badge bg-danger rounded-circle position-absolute top-0 start-100 translate-middle">
                            0
                        </span>
                    </a>                    
                    <% if (user) { %>
                        <!-- Show profile icon if user is logged in -->
                        <a href="/userDashboard" class="text-black me-3"><i class="far fa-user" aria-hidden="true"></i></i></a>
                    <% } else { %>
                        <!-- Show Login/Signup if no user is logged in -->
                        <a href="/login" class="btn btn-outline-secondary">Login/signup</a>
                        
                    <% } %>
                </span>
                </div>
                
            </div>
        </div>
    </div>
    
    <div class="container py-5">
        <h1 class="mb-4 ">All Products</h1>
        <div class="row mb-4">
            <div class="col-md-3">
                <select class="form-select" onchange="applyFilter('category', this.value)">
                    <option value="">Filter by Category</option>
                    <% categories.forEach(category => { %>
                    <option value="<%= category._id %>" ><%= category.name %></option>
                    <% }) %>
                </select>
            </div>
            <div class="col-md-3">
                <select class="form-select" onchange="applyFilter('sort', this.value)" >
                    <option value="">Sort by</option>
                    <option value="price-asc">Price: Low to High</option>
                    <option value="price-desc">Price: High to Low</option>
                    <option value="name-asc">Name: A to Z</option>
                    <option value="name-desc">Name: Z to A</option>

                </select>
            </div>
            <div class="col-md-3">
                <div class="input-group">
                    <form action="/allProducts" method="get">
                        <input type="text" name="search" value="<%= search %>" class="form-control" placeholder="Search products...">
                        <!-- <button class="btn btn-outline-secondary" type="button">
                            <i class="fas fa-search"></i>
                        </button> -->
                    </form>
                </div>
            </div>
        <div class="row g-4">
            <!-- 1. Green Apple -->
             <% products.forEach(product => { %>
            <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                <div class="card product-card">
                    <button class="btn wishlist-icon border-0" onclick="addToWishlist('<%= product._id %>')"><i class="far fa-heart"></i></button>
                    <a style="text-decoration: none; color: black;" href="/productDetails/<%= product._id %>">
                    <% if(product.offerDiscount > 0){ %>
                    <span class="badge bg-danger sale-badge">Sale <%= product.offerDiscount %>%</span>
                    <% } %>
                    
                    <img src="<%= product.images[0] %>" class="card-img-top product-image p-3" alt="<%= product.name %> image">
                    <div class="card-body">
                        <h5 class="card-title"><%= product.name %></h5>
                        <span class="badge <%= product.stock > 0 ? 'bg-success' : 'bg-danger' %>">
                            <%= product.stock > 0 ? 'In Stock' : 'Out of Stock' %>
                        </span>
                        <div class="star-rating mb-2">
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="far fa-star"></i>
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <span class="h5 mb-0">₹<%= product.priceAfterDiscount.toFixed(2) %>/kg</span>
                                <span class="original-price ms-2">₹<%= product.price %>/kg</span>
                            </div>
                           
                        </div>
                    </div>
                </a>
                <% if(product.stock > 0){ %>
                    <button class="btn btn-outline-primary btn-sm" onclick="addToCart('<%= product._id %>')"><i class="fas fa-shopping-cart"></i></button>
                <% } else { %>
                    <button class="btn btn-outline-primary btn-sm" disabled><i class="fas fa-shopping-cart"></i></button>
                <% } %>
                </div>
            </div>
            <% }) %>

        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>

        function applyFilter(key,value){
            const url = new URL(window.location.href);
            url.searchParams.set(key,value)
            window.location.href = url.href
        }
        window.addEventListener('DOMContentLoaded', () => {
       
        const urlParams = new URLSearchParams(window.location.search);
        const selectedCategory = urlParams.get('category');
        
        const filterInfo = document.getElementById('filter-info');
        const categoryName = document.querySelector(`option[value="${selectedCategory}"]`);
        
        if (selectedCategory && categoryName) {
            
            filterInfo.innerHTML = `Showing results for category: <strong>${categoryName.textContent}</strong>`;
        } else {
           
            filterInfo.innerHTML = '';
        }
    });

//add to cart
    async function addToCart(productId) {
            try {
                const response = await fetch('/wishlist/addToCart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId })
                });

                const data = await response.json();

                if (data.message) {
                    let icon = 'success'; 
                    if (data.type === 'warning') {
                        icon = 'warning'; 
                    }
                    Swal.fire({
                        icon: icon,
                        title: icon === 'warning' ? 'Warning' : 'Success',
                        text: data.message,
                        timer: 1500,
                        showConfirmButton: false
                    }).then(()=>{
                        location.reload()
                    })
                } else if (data.error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.error
                    });
                }
            } catch (error) {
                 
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Log in to add to cart.'
                });
                console.error('Error adding to cart:', error);
            }
        }

        
        //add to wishlist
        async function addToWishlist(productId) {
        try {
            const response = await fetch('/wishlist/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId })
            });

            const data = await response.json();

            if (data.message) {
                let icon = 'success';
                if (data.type === 'warning') {
                    icon = 'warning'; 
                }
                Swal.fire({
                    icon: icon,
                    title: icon === 'warning' ? 'Warning' : 'Success',
                    text: data.message,
                    timer: 1500,
                    showConfirmButton: false
                }).then(()=>{
                    location.reload()
                })
            } else if (data.error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.error
                });
            }
        } catch (error) {
            Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Log in to add to wishlist.'
                });
            console.error('Error adding to wishlist:', error);
        }
    }

    document.addEventListener('DOMContentLoaded',()=>{
        fetch('/cart/count')
            .then(response => response.json())
            .then(data =>{
                const cartBadge = document.getElementById('cart-badge')
                if(data.cartCount > 0){
                    cartBadge.textContent = data.cartCount
                    cartBadge.style.display = 'inline'
                } else {
                    cartBadge.style.display = 'none'
                }
            })
            .catch(error =>{
                console.error('Error fetching cart count:',error)
            })


        fetch('/wishlist/count')
            .then(response => response.json())
            .then(data =>{
                const wishlistBadge = document.getElementById('wishlist-badge')
                if(data.wishlistCount > 0){
                    wishlistBadge.textContent = data.wishlistCount
                    wishlistBadge.style.display = 'inline'
                } else {
                    wishlistBadge.style.display = 'none'
                }
            }).catch(error =>{
                console.error('Error fetching wishlist count:',error)
            })

        fetch('/allProducts')
            .then(response =>{
                if(!response.ok){
                    return response.json().then(data =>{
                        Swal.fire({
                            icon:'error',
                            title:'Oops...',
                            text: data.message || 'An unexpected error occured!',
                            confirmButtonText:'OK'
                        })
                    })
                }
            }).catch(err =>{
                Swal.fire({
                    icon:'error',
                    title:'Network Error',
                    text:'Check your connection and try again',
                    confirmButtonText:'OK'
                })
            })
    })
    </script>
</body>
</html>