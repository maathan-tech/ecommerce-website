<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Login - HarvestBazar</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> -->
    <style>
        body {
            background-color: #f8f9fa;
        }
        .login-container {
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .login-card {
            background: white;
            padding: 40px;
            border-radius: 8px;
            box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
            width: 450px; /* Adjust width for a bigger login card */
        }
        .login-card .form-control {
            border-radius: 20px;
        }
        .login-card button {
            background-color: #28a745;
            border-color: #28a745;
            border-radius: 20px;
        }
        .login-card .forgot-password {
            float: right;
        }
        .password-field {
            position: relative;
        }
        
        .password-toggle {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #666;
        }
        .footer {
            background-color: #000;
            color: #fff;
            padding: 20px 0;
            text-align: center;
        }
        .breadcrumb-container {
            background-color: white;
            padding: 15px;
            box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);
        }
        .breadcrumb a {
            color: #28a745;
            text-decoration: none;
        }
        .google-btn {
            border: 1px solid #ddd;
            background-color: white;
            color: #666;
        }
        
        .google-btn img {
            width: 18px;
            margin-right: 8px;
        }
    </style>
</head>
<body>
    <header class="bg-white shadow-sm">
        <nav class="navbar navbar-expand-lg navbar-light">
            <div class="container">
                <a class="navbar-brand" href="#"><img src="/images/HarvestBazar1.png" alt="HarvestBazar" height="50"> </a>
                
            </div>
        </nav>
    </header>

  

    <div class="login-container">
        <div class="login-card">
            <h3 class="mb-4">Sign In</h3>
            <!-- <% if (typeof error !== 'undefined') { %>
                <p style="color: red;"><%= error %></p>  
              <% } %> -->
            <form id="loginForm">
                <div class="form-group">
                    <input type="" class="form-control"  name="email" placeholder="Email" required>
                </div>
                <div class="form-group">
                    <div class="password-field">
                        <input type="password" class="form-control" name="password" placeholder="Password" required>
                        <i class="fas fa-eye password-toggle"></i>
                    </div>
                </div>
                <div class="form-group form-check text-left">
                    <input type="checkbox" class="form-check-input" id="rememberMe">
                    <label class="form-check-label" for="rememberMe">Remember me</label>
                    <a href="/forgot-password" class="forgot-password">Forgot Password</a>
                    
                </div>
                <button type="submit" class="btn btn-success btn-block">Login</button>
                <button type="button" style="background: #ddd;" class="btn google-btn mt-3 w-100" onclick="window.location.href='/auth/google'">
                    <img src="https://cdn.cdnlogo.com/logos/g/35/google-icon.svg" alt="Google">
                    Sign up with Google
                </button>
                <p class="mt-3">Don't have an account? <a href="/signup" class="text-success">Register</a></p>
            </form>
         
        </div>
        
    </div>

    <footer class="footer">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <a class="navbar-brand" href="#"><img src="/images/HarvestBazar1.png" alt="HarvestBazar" height="50"> </a>
                    <!-- <h5>HarvestBazar</h5> -->
                    <p></p>
                    <p>1800-4587-7845 or <a href="" class="text-white">harvestbazar@gmail.com</a></p>
                </div>
            </div>
            <div class="mt-3">
                <!-- <img src="payment-icons.png" alt="Payment Methods" class="img-fluid"> -->
                <p class="mt-2">HarvestBazar eCommerce Â© 2021. All Rights Reserved</p>
            </div>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        // Password toggle functionality
        document.querySelectorAll('.password-toggle').forEach(toggle => {
            toggle.addEventListener('click', function() {
                const input = this.previousElementSibling;
                if (input.type === 'password') {
                    input.type = 'text';
                    this.classList.remove('fa-eye');
                    this.classList.add('fa-eye-slash');
                } else {
                    input.type = 'password';
                    this.classList.remove('fa-eye-slash');
                    this.classList.add('fa-eye');
                }
            });
        });

        document.addEventListener('DOMContentLoaded',()=>{
            fetch('/login')
            .then(response =>{
                if(!response.ok){
                    return response.json().then(data =>{
                        Swal.fire({
                            icon:'error',
                            title:'Oops...',
                            text: data.message || 'An unexpected error occured!',
                            confirmButtonText:'OK'
                        })
                    })
                }
            }).catch(err =>{
                Swal.fire({
                    icon:'error',
                    title:'Network Error',
                    text:'Please check your internet connection and try again',
                    confirmButtonText : 'OK'
                })
            })

            const params = new URLSearchParams(window.location.search)
            const error = params.get('error')

            if(error){
                Swal.fire({
                    icon:'error',
                    title:'Error',
                    text:error,
                    confirmButtonText:'OK'
                })
            }
        })

        
        

        document.getElementById('loginForm').addEventListener('submit', async (e) => {
        e.preventDefault();

        const formData = new FormData(e.target);
        const result = Object.fromEntries(formData.entries());

        try {
            const response = await fetch('/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(result),
            });

            const data = await response.json();

            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: data.message,
                    confirmButtonText: 'OK',
                }).then(() => {
                    window.location.href = '/';
                });
            } else {
                if (data.showResend) {
                
                    Swal.fire({
                        icon: 'error',
                        title: 'User Not Verified',
                        html: `
                            <p>${data.message}</p>
                            <form id="resendOTPForm">
                                <input type="hidden" name="email" value="${data.email}">
                                <button type="submit" class="btn btn-outline-success">Resend OTP</button>
                            </form>
                        `,
                        showConfirmButton: false,
                    });

                    // Attach handler for the Resend OTP form
                    document
                        .getElementById('resendOTPForm')
                        .addEventListener('submit', async (e) => {
                            e.preventDefault();

                            const formData = new FormData(e.target);
                            const result = Object.fromEntries(formData.entries());

                            try {

                                Swal.fire({
                                    title: 'Resending OTP...',
                                    text: 'Please wait while we process your request.',
                                    allowOutsideClick: false, 
                                    allowEscapeKey: false,   
                                    didOpen: () => {
                                        Swal.showLoading(); 
                                    }
                                });
                                const resendResponse = await fetch('/resend-otp', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify(result),
                                });

                                const resendData = await resendResponse.json();

                                if (resendData.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'OTP Resent',
                                        text: resendData.message,
                                        confirmButtonText: 'OK',
                                    }).then(()=>{
                                        window.location.href = `/verify-otp?email=${resendData.email}`
                                    })
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: resendData.message,
                                        confirmButtonText: 'OK',
                                    });
                                }
                            } catch (error) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'Something went wrong. Please try again later.',
                                    confirmButtonText: 'OK',
                                });
                            }
                        });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message,
                        confirmButtonText: 'OK',
                    });
                }
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong. Please try again later.',
                confirmButtonText: 'OK',
            });
        }
    });

    </script>
</body>
</html>
