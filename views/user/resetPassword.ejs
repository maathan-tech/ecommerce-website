<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            background-color: #f8f9fa;
        }
        .card {
            border-radius: 0;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        }
        .form-control {
            border-radius: 0;
        }
        .btn-success {
            background-color: #28a745;
            border-color: #28a745;
            border-radius: 0;
        }
        .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }
    </style>
</head>
<body>
    <div class="container d-flex justify-content-center align-items-center" style="height: 100vh;">
        <div class="card p-4 w-100 max-w-md">
            <h2 class="text-center mb-4">Reset Password</h2>
            <form id="resetPasswordForm" method="post">
                <div class="form-group">
                    <label for="newPassword">New Password:</label>
                    <input type="password" class="form-control" id="newPassword" required  placeholder="Enter new password" />
                </div>
                <div class="form-group">
                    <label for="confirmPassword">Confirm Password:</label>
                    <input type="password" class="form-control" id="confirmPassword" required  placeholder="Confirm new password" />
                </div>
                <button type="submit" class="btn btn-success btn-block">Reset Password</button>
            </form>
        </div>
    </div>

    <script>


        document.addEventListener('DOMContentLoaded',()=>{
            fetch('/reset-password/:token')
            .then(response =>{
                if(!response.ok){
                    return response.json().then(data =>{
                        Swal.fire({
                            icon:'error',
                            title:'Oops..',
                            text: data.message || 'An unexpected error occured',
                            confirmButtonText:'OK'
                        })
                    })
                }
            }).catch(err=>{
                Swal.fire({
                    icon:'error',
                    title:'Network Error',
                    text:'Please check your internet connection and try again',
                    confirmButtonText : 'OK'
                })
            })
        })

        // const urlParams = new URLSearchParams(window.location.search);
        // const token = urlParams.get('token');
       const urlPath = window.location.pathname;
       const token = urlPath.split('/')[2];
       console.log("Token:",token)
        
        
        // Set form action with token in the URL path
        const form = document.getElementById('resetPasswordForm');
        if (token) {
        form.action = `/reset-password/${token}`;
        } else {
            console.error("Token not found in URL");
        }

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            const newPassword = document.getElementById('newPassword').value.trim();
            const confirmPassword = document.getElementById('confirmPassword').value.trim();

            // Validate passwords match
            if (newPassword !== confirmPassword) {
                return Swal.fire('Error', 'Passwords do not match.', 'error');
            }

            

            try {
                const response = await fetch(`/reset-password/${token}`, {
                    method: 'post',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ newPassword }),
                });

                const result = await response.json();
                if (response.ok) {
                    Swal.fire('Success', result.message, 'success').then(() => {
                        window.location.href = '/login';
                    });
                } else {
                    Swal.fire('Error', result.message || 'An error occurred. Please try again.', 'error');
                }
            } catch (error) {
                Swal.fire('Error', 'Something went wrong. Try again later.', 'error');
            }
        });
    </script>
</body>
</html>
